#include<iostream>
using namespace std;
#define N 4

void printPath(int visited[N][N])
{
    for(int i=0;i<N;i++)
    {
        for(int j=0;j<N;j++)
        {
            cout<<visited[i][j]<<" ";
        }
        cout<<endl;
    }
}

bool isSafe(int maze[N][N], int visited[N][N], int x, int y)
{
    return (visited[x][y]==0 && maze[x][y]==1 && x>=0 && y>=0 && x<N && y<N);
}

bool dfs(int maze[N][N], int visited[N][N], int x, int y)
{
    if(x==N-1 && y==N-1)
    {
        visited[x][y]=1;
        return true;
    }
    
    if(isSafe(maze,visited,x,y))
    {
        visited[x][y]=1;
        
        if(dfs(maze, visited , x+1, y)== true)
            return true;
        if(dfs(maze, visited, x, y+1)== true)
            return true;
        
        visited[x][y]=0;
    }
    return false;
}

int main()
{
    int maze[N][N];
    cout<<"enter a matrix "<<endl;
    for(int i=0;i<N;i++)
    {
        for(int j=0;j<N;j++)
        {
            cin>>maze[i][j];
        }
    }
    int visited[N][N]={0};
    if(dfs(maze,visited,0,0)==false){
        cout<<"path not exist"<<endl;
    }else{
        cout<<"Path is: "<<endl;
        printPath(visited);
    }
    return 0;
}
